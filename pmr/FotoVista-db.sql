-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.users
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    role_id bigint NOT NULL,
    firstname character(50) NOT NULL,
    lastname character(50) NOT NULL,
    username character(50) NOT NULL,
    email text NOT NULL,
    password_hash text NOT NULL,
    salt text NOT NULL,
    profile_picture_url text NOT NULL,
    bio text NOT NULL,
    created_at timestamp with time zone DEFAULT Now(),
    updated_at timestamp with time zone DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.posts
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    user_id bigint NOT NULL,
    caption text NOT NULL,
    image_url text NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.comments
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    post_id bigint NOT NULL,
    user_id bigint NOT NULL,
    text text NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.likes
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    post_id bigint NOT NULL,
    user_id bigint NOT NULL,
    created_at timestamp with time zone NOT NULL DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.followers
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    user_id bigint NOT NULL,
    follower_user_id bigint NOT NULL,
    created_at timestamp without time zone NOT NULL DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    name character NOT NULL,
    created_at timestamp without time zone DEFAULT Now(),
    updated_at timestamp without time zone DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.hashtags
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    name character(25) NOT NULL,
    created_at timestamp without time zone DEFAULT Now(),
    update_at timestamp without time zone DEFAULT Now(),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.posthashtags
(
    id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
    post_id bigint NOT NULL,
    hashtag_id bigint NOT NULL,
    create_at timestamp without time zone DEFAULT Now(),
    update_at timestamp without time zone DEFAULT Now(),
    PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.users
    ADD FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.posts
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.comments
    ADD FOREIGN KEY (post_id)
    REFERENCES public.posts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.comments
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.likes
    ADD FOREIGN KEY (post_id)
    REFERENCES public.posts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.likes
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.followers
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.followers
    ADD FOREIGN KEY (follower_user_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.posthashtags
    ADD FOREIGN KEY (post_id)
    REFERENCES public.posts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.posthashtags
    ADD FOREIGN KEY (hashtag_id)
    REFERENCES public.hashtags (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;